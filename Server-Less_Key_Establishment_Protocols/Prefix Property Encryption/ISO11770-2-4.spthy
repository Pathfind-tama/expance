theory ISO11770_2_4 begin



/* 

 Protocol:

 1. A -> B: {ta}kab


*/
functions: enc/2, dec/2, prefix/1
equations: dec(enc(M,k), k) = M
         , prefix(enc(<X,Y>, k)) = enc(X, k)

rule setup:
  [ Fr(~k) ]
--[ KeyGen($A,$B) ]->
  [ !SharedKey($A, $B,~k) ]

/*
  rule reveal:
  [ !SharedKeyWithServer(X, k) ]
--[ Reveal(X,k),Init_once('1') ]->
  [ Out(k), Reveal(X,k)]
*/

rule BA1:
  [ Fr(~nb),!SharedKey($A, $B,kab)]
--[  ]->
  [ BA1($A,$B,~nb),Out(~nb) ]

 
rule AB2:
  [ In(nb),Fr(~kab1),!SharedKey($A, $B,kab)]
--[  ]->
  [ Out(enc(<<nb,$B>,~kab1>,kab)) ]


rule Attack_test1:
    [ In(c),In(m),!SharedKey($A,$B,kab)]
  --[ Eq(c,enc(m,kab)),Attack_suc() ]->
    [ ]



restriction Verif:
"
    All x y #i. Eq(x,y) @ i ==> x = y
"
/*
restriction Init:
" 
   All #i #j x. Init_once(x)@i & Init_once(x)@j ==> #i=#j
"

restriction Neq:
"
    All x #i. Neq(x,x) @ i ==> F
"
#ifdef timethis
#endif
*/


lemma Test:
exists-trace
"
	Ex #j. Attack_suc()@j
"

end

